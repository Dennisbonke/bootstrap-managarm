packages:
  - name: breeze
    architecture: '@OPTION:arch@'
    metadata:
      summary: Breeze visual style for the Plasma desktop
      description: This package provides the Breeze visual style for the Plasma desktop.
      spdx: 'GPL-2.0-only'
      website: 'https://invent.kde.org/plasma/breeze'
      maintainer: "Dennis Bonke <dennis@managarm.org>"
      categories: ['kde-plasma']
    source:
      subdir: 'ports'
      git: 'https://github.com/KDE/breeze.git'
      tag: 'v5.93.0' # Yes this is 6.0rc2
      version: '6.0rc2'
    tools_required:
      - system-gcc
      - host-cmake
      - host-qt6
      - host-ecm
      - host-kconfig
      - host-kcmutils
    pkgs_required:
      - mlibc
      - qtbase6
      - qtdeclarative6
      - frameworkintegration
      - kcmutils
      - kconfig
      - kconfigwidgets
      - kcoreaddons
      - kguiaddons
      - ki18n
      - kiconthemes
      - kirigami
      - kwidgetsaddons
      - kwindowsystem
      - kdecoration
    configure:
      - args:
        - 'cmake'
        - '-GNinja'
        - '-DCMAKE_INSTALL_PREFIX=/usr'
        - '-DCMAKE_TOOLCHAIN_FILE=@SOURCE_ROOT@/scripts/CMakeToolchain-@OPTION:arch-triple@.txt'
        - '-DECM_DIR=@BUILD_ROOT@/tools/host-ecm'
        - '-DCMAKE_BUILD_TYPE=Debug'
        ### from ecm.class
        - '-DQT_MAJOR_VERSION=6'
        - '-DBUILD_TESTING=OFF'
        - '-DBUILD_QCH=FALSE'
        - '-DKDE_INSTALL_USE_QT_SYS_PATHS=ON'
        - '-DKDE_INSTALL_QMLDIR=/usr/lib/qt6/qml'
        - '-DKDE_INSTALL_PLUGINDIR=/usr/lib/qt6/plugins'
        - '-DKDE_INSTALL_QTPLUGINDIR=/usr/lib/qt6/plugins'
        ### end ecm.class
        - '-DBUILD_QT6=ON'
        - '-DBUILD_QT5=OFF'
        - '-DKF6_HOST_TOOLING=@BUILD_ROOT@/tools/host-kconfig/lib/x86_64-linux-gnu/cmake/;@BUILD_ROOT@/tools/host-kcmutils/lib/x86_64-linux-gnu/cmake/'
        - '@THIS_SOURCE_DIR@'
    build:
      - args: ['ninja']
      - args: ['ninja', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: kactivitymanagerd
    architecture: '@OPTION:arch@'
    metadata:
      summary: System service to manage user's activities, track the usage patterns etc.
      description: This package provides a system service to manage user's activities, track the usage patterns etc.
      spdx: 'GPL-2.0-only GPL-3.0-only'
      website: 'https://kde.org/plasma-desktop'
      maintainer: "Dennis Bonke <dennis@managarm.org>"
      categories: ['kde-plasma']
    source:
      subdir: 'ports'
      git: 'https://github.com/KDE/kactivitymanagerd.git'
      tag: 'v5.93.0' # Yes this is 6.0rc2
      version: '6.0rc2'
    tools_required:
      - system-gcc
      - host-cmake
      - host-qt6
      - host-ecm
    pkgs_required:
      - mlibc
      - qtbase6
      - kconfig
      - kcoreaddons
      - kcrash
      - kdbusaddons
      - kglobalaccel
      - ki18n
      - kio
      - kservice
      - kwindowsystem
      - kxmlgui
      - boost
    configure:
      - args:
        - 'cmake'
        - '-GNinja'
        - '-DCMAKE_INSTALL_PREFIX=/usr'
        - '-DCMAKE_TOOLCHAIN_FILE=@SOURCE_ROOT@/scripts/CMakeToolchain-@OPTION:arch-triple@.txt'
        - '-DECM_DIR=@BUILD_ROOT@/tools/host-ecm'
        - '-DCMAKE_BUILD_TYPE=Debug'
        ### from ecm.class
        - '-DQT_MAJOR_VERSION=6'
        - '-DBUILD_TESTING=OFF'
        - '-DBUILD_QCH=FALSE'
        - '-DKDE_INSTALL_USE_QT_SYS_PATHS=ON'
        - '-DKDE_INSTALL_QMLDIR=/usr/lib/qt6/qml'
        - '-DKDE_INSTALL_PLUGINDIR=/usr/lib/qt6/plugins'
        - '-DKDE_INSTALL_QTPLUGINDIR=/usr/lib/qt6/plugins'
        ### end ecm.class
        - '@THIS_SOURCE_DIR@'
    build:
      - args: ['ninja']
      - args: ['ninja', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: kde-cli-tools
    architecture: '@OPTION:arch@'
    metadata:
      summary: Tools based on KDE Frameworks 6 to better interact with the system
      description: This package provides a tools based on KDE Frameworks 6 to better interact with the system.
      spdx: 'GPL-2.0-only'
      website: 'https://invent.kde.org/plasma/kde-cli-tools'
      maintainer: "Dennis Bonke <dennis@managarm.org>"
      categories: ['kde-plasma']
    source:
      subdir: 'ports'
      git: 'https://github.com/KDE/kde-cli-tools.git'
      tag: 'v5.27.80' # Yes this is 6.0rc2???
      version: '6.0rc2'
    tools_required:
      - system-gcc
      - host-cmake
      - host-qt6
      - host-ecm
      - host-kconfig
      - host-kcmutils
      - host-kpackage
      - wayland-scanner
    pkgs_required:
      - mlibc
      - qtbase6
      - qtsvg6
      - kcmutils
      - kcompletion
      - kconfig
      - kconfigwidgets
      - kcoreaddons
      - kdesu
      - ki18n
      - kiconthemes
      - kio
      - kparts
      - kservice
      - kwidgetsaddons
      - kwindowsystem
      - dbus
    configure:
      - args:
        - 'cmake'
        - '-GNinja'
        - '-DCMAKE_INSTALL_PREFIX=/usr'
        - '-DCMAKE_TOOLCHAIN_FILE=@SOURCE_ROOT@/scripts/CMakeToolchain-@OPTION:arch-triple@.txt'
        - '-DECM_DIR=@BUILD_ROOT@/tools/host-ecm'
        - '-DCMAKE_BUILD_TYPE=Debug'
        ### from ecm.class
        - '-DQT_MAJOR_VERSION=6'
        - '-DBUILD_TESTING=OFF'
        - '-DBUILD_QCH=FALSE'
        - '-DKDE_INSTALL_USE_QT_SYS_PATHS=ON'
        - '-DKDE_INSTALL_QMLDIR=/usr/lib/qt6/qml'
        - '-DKDE_INSTALL_PLUGINDIR=/usr/lib/qt6/plugins'
        - '-DKDE_INSTALL_QTPLUGINDIR=/usr/lib/qt6/plugins'
        ### end ecm.class
        - '-DKF_IGNORE_PLATFORM_CHECK=TRUE' # We're porting, and this is the recommended way to do it.
        - '-DWITH_X11=TRUE'
        - '-DBUILD_DOCS=FALSE'
        - '-DKF6_HOST_TOOLING=@BUILD_ROOT@/tools/host-kconfig/lib/x86_64-linux-gnu/cmake/;@BUILD_ROOT@/tools/host-kcmutils/lib/x86_64-linux-gnu/cmake/;@BUILD_ROOT@/tools/host-kpackage/lib/x86_64-linux-gnu/cmake/'
        - '@THIS_SOURCE_DIR@'
    build:
      - args: ['ninja']
      - args: ['ninja', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: kdecoration
    architecture: '@OPTION:arch@'
    metadata:
      summary: Plugin based library to create window decorations
      description: This package provides a plugin based library to create window decorations.
      spdx: 'LGPL-2.1-only LGPL-3.0-only'
      website: 'https://kde.org/plasma-desktop'
      maintainer: "Dennis Bonke <dennis@managarm.org>"
      categories: ['kde-plasma']
    source:
      subdir: 'ports'
      git: 'https://github.com/KDE/kdecoration.git'
      tag: 'v5.93.0' # Yes this is 6.0rc2
      version: '6.0rc2'
    tools_required:
      - system-gcc
      - host-cmake
      - host-qt6
      - host-ecm
    pkgs_required:
      - mlibc
      - qtbase6
      - ki18n
    configure:
      - args:
        - 'cmake'
        - '-GNinja'
        - '-DCMAKE_INSTALL_PREFIX=/usr'
        - '-DCMAKE_TOOLCHAIN_FILE=@SOURCE_ROOT@/scripts/CMakeToolchain-@OPTION:arch-triple@.txt'
        - '-DECM_DIR=@BUILD_ROOT@/tools/host-ecm'
        - '-DCMAKE_BUILD_TYPE=Debug'
        ### from ecm.class
        - '-DQT_MAJOR_VERSION=6'
        - '-DBUILD_TESTING=OFF'
        - '-DBUILD_QCH=FALSE'
        - '-DKDE_INSTALL_USE_QT_SYS_PATHS=ON'
        - '-DKDE_INSTALL_QMLDIR=/usr/lib/qt6/qml'
        - '-DKDE_INSTALL_PLUGINDIR=/usr/lib/qt6/plugins'
        - '-DKDE_INSTALL_QTPLUGINDIR=/usr/lib/qt6/plugins'
        ### end ecm.class
        - '@THIS_SOURCE_DIR@'
    build:
      - args: ['ninja']
      - args: ['ninja', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: kscreenlocker
    architecture: '@OPTION:arch@'
    metadata:
      summary: Library and components for secure lock screen architecture
      description: This package provides a library and components for secure lock screen architecture.
      spdx: 'GPL-2.0-only'
      website: 'https://kde.org/plasma-desktop'
      maintainer: "Dennis Bonke <dennis@managarm.org>"
      categories: ['kde-plasma']
    source:
      subdir: 'ports'
      git: 'https://github.com/KDE/kscreenlocker.git'
      tag: 'v5.27.80' # Yes this is 6.0rc2???
      version: '6.0rc2'
    tools_required:
      - system-gcc
      - host-cmake
      - host-qt6
      - host-ecm
      - host-kconfig
      - host-kcmutils
      - host-kpackage
      - wayland-scanner
    pkgs_required:
      - mlibc
      - qtbase6
      - qtdeclarative6
      - kcmutils
      - kconfig
      - kconfigwidgets
      - kcoreaddons
      - kcrash
      - kglobalaccel
      - ki18n
      - kidletime
      - kio
      - knotifications
      - ksvg
      - kwindowsystem
      - solid
      - layer-shell-qt
      - libplasma
      - libkscreen
      - libx11
      - libxi
      - libxcb
      - xcb-util-keysyms
      - xorg-proto
      - kirigami
      - kde-cli-tools
    configure:
      - args:
        - 'cmake'
        - '-GNinja'
        - '-DCMAKE_INSTALL_PREFIX=/usr'
        - '-DCMAKE_TOOLCHAIN_FILE=@SOURCE_ROOT@/scripts/CMakeToolchain-@OPTION:arch-triple@.txt'
        - '-DECM_DIR=@BUILD_ROOT@/tools/host-ecm'
        - '-DCMAKE_BUILD_TYPE=Debug'
        ### from ecm.class
        - '-DQT_MAJOR_VERSION=6'
        - '-DBUILD_TESTING=OFF'
        - '-DBUILD_QCH=FALSE'
        - '-DKDE_INSTALL_USE_QT_SYS_PATHS=ON'
        - '-DKDE_INSTALL_QMLDIR=/usr/lib/qt6/qml'
        - '-DKDE_INSTALL_PLUGINDIR=/usr/lib/qt6/plugins'
        - '-DKDE_INSTALL_QTPLUGINDIR=/usr/lib/qt6/plugins'
        ### end ecm.class
        - '-DKF_IGNORE_PLATFORM_CHECK=TRUE' # We're porting, and this is the recommended way to do it.
        - '-DPAM_REQUIRED=OFF'
        - '-DKF6_HOST_TOOLING=@BUILD_ROOT@/tools/host-kconfig/lib/x86_64-linux-gnu/cmake/;@BUILD_ROOT@/tools/host-kcmutils/lib/x86_64-linux-gnu/cmake/;@BUILD_ROOT@/tools/host-kpackage/lib/x86_64-linux-gnu/cmake/'
        - '@THIS_SOURCE_DIR@'
    build:
      - args: ['ninja']
      - args: ['ninja', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: kwayland
    architecture: '@OPTION:arch@'
    metadata:
      summary: Qt-style API to interact with the wayland-client API
      description: This package provides a Qt-style API to interact with the wayland-client API.
      spdx: 'LGPL-2.1-only'
      website: 'https://invent.kde.org/frameworks/kwayland'
      maintainer: "Dennis Bonke <dennis@managarm.org>"
      categories: ['kde-plasma']
    source:
      subdir: 'ports'
      git: 'https://github.com/KDE/kwayland.git'
      tag: 'v5.27.80' # Yes this is 6.0rc2????
      version: '6.0rc2'
    tools_required:
      - system-gcc
      - host-cmake
      - host-qt6
      - host-ecm
      - wayland-scanner
    pkgs_required:
      - mlibc
      - qtbase6
      - wayland
      - qtwayland6
      - libglvnd
      - wayland-protocols
      - plasma-wayland-protocols
    configure:
      - args:
        - 'cmake'
        - '-GNinja'
        - '-DCMAKE_INSTALL_PREFIX=/usr'
        - '-DCMAKE_TOOLCHAIN_FILE=@SOURCE_ROOT@/scripts/CMakeToolchain-@OPTION:arch-triple@.txt'
        - '-DECM_DIR=@BUILD_ROOT@/tools/host-ecm'
        - '-DCMAKE_BUILD_TYPE=Debug'
        ### from ecm.class
        - '-DQT_MAJOR_VERSION=6'
        - '-DBUILD_TESTING=OFF'
        - '-DBUILD_QCH=FALSE'
        - '-DKDE_INSTALL_USE_QT_SYS_PATHS=ON'
        - '-DKDE_INSTALL_QMLDIR=/usr/lib/qt6/qml'
        - '-DKDE_INSTALL_PLUGINDIR=/usr/lib/qt6/plugins'
        - '-DKDE_INSTALL_QTPLUGINDIR=/usr/lib/qt6/plugins'
        ### end ecm.class
        - '@THIS_SOURCE_DIR@'
    build:
      - args: ['ninja']
      - args: ['ninja', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: layer-shell-qt
    architecture: '@OPTION:arch@'
    metadata:
      summary: Qt component to allow applications make use of Wayland wl-layer-shell protocol
      description: This package provides a Qt component to allow applications make use of Wayland wl-layer-shell protocol.
      spdx: 'LGPL-3.0-or-later'
      website: 'https://kde.org/plasma-desktop'
      maintainer: "Dennis Bonke <dennis@managarm.org>"
      categories: ['kde-plasma']
    source:
      subdir: 'ports'
      git: 'https://github.com/KDE/layer-shell-qt.git'
      tag: 'v5.93.0' # Yes this is 6.0rc2
      version: '6.0rc2'
    tools_required:
      - system-gcc
      - host-cmake
      - host-qt6
      - host-ecm
      - wayland-scanner
    pkgs_required:
      - mlibc
      - qtbase6
      - qtdeclarative6
      - qtwayland6
      - wayland
      - wayland-protocols
      - libxkbcommon
    configure:
      - args:
        - 'cmake'
        - '-GNinja'
        - '-DCMAKE_INSTALL_PREFIX=/usr'
        - '-DCMAKE_TOOLCHAIN_FILE=@SOURCE_ROOT@/scripts/CMakeToolchain-@OPTION:arch-triple@.txt'
        - '-DECM_DIR=@BUILD_ROOT@/tools/host-ecm'
        - '-DCMAKE_BUILD_TYPE=Debug'
        ### from ecm.class
        - '-DQT_MAJOR_VERSION=6'
        - '-DBUILD_TESTING=OFF'
        - '-DBUILD_QCH=FALSE'
        - '-DKDE_INSTALL_USE_QT_SYS_PATHS=ON'
        - '-DKDE_INSTALL_QMLDIR=/usr/lib/qt6/qml'
        - '-DKDE_INSTALL_PLUGINDIR=/usr/lib/qt6/plugins'
        - '-DKDE_INSTALL_QTPLUGINDIR=/usr/lib/qt6/plugins'
        ### end ecm.class
        - '-DKF_IGNORE_PLATFORM_CHECK=TRUE' # We're porting, and this is the recommended way to do it.
        - '@THIS_SOURCE_DIR@'
    build:
      - args: ['ninja']
      - args: ['ninja', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: libkscreen
    architecture: '@OPTION:arch@'
    metadata:
      summary: Plasma screen management library
      description: This package provides the Plasma screen management library.
      spdx: 'GPL-2.0-only'
      website: 'https://kde.org/plasma-desktop'
      maintainer: "Dennis Bonke <dennis@managarm.org>"
      categories: ['kde-plasma']
    source:
      subdir: 'ports'
      git: 'https://github.com/KDE/libkscreen.git'
      tag: 'v5.27.80' # Yes this is 6.0rc2???
      version: '6.0rc2'
    tools_required:
      - system-gcc
      - host-cmake
      - host-qt6
      - host-ecm
      - wayland-scanner
    pkgs_required:
      - mlibc
      - qtbase6
      - qtwayland6
      - wayland
      - plasma-wayland-protocols
      - libxcb
      - kconfig
    configure:
      - args:
        - 'cmake'
        - '-GNinja'
        - '-DCMAKE_INSTALL_PREFIX=/usr'
        - '-DCMAKE_TOOLCHAIN_FILE=@SOURCE_ROOT@/scripts/CMakeToolchain-@OPTION:arch-triple@.txt'
        - '-DECM_DIR=@BUILD_ROOT@/tools/host-ecm'
        - '-DCMAKE_BUILD_TYPE=Debug'
        ### from ecm.class
        - '-DQT_MAJOR_VERSION=6'
        - '-DBUILD_TESTING=OFF'
        - '-DBUILD_QCH=FALSE'
        - '-DKDE_INSTALL_USE_QT_SYS_PATHS=ON'
        - '-DKDE_INSTALL_QMLDIR=/usr/lib/qt6/qml'
        - '-DKDE_INSTALL_PLUGINDIR=/usr/lib/qt6/plugins'
        - '-DKDE_INSTALL_QTPLUGINDIR=/usr/lib/qt6/plugins'
        ### end ecm.class
        - '-DKF_IGNORE_PLATFORM_CHECK=TRUE' # We're porting, and this is the recommended way to do it.
        - '@THIS_SOURCE_DIR@'
    build:
      - args: ['ninja']
      - args: ['ninja', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: libplasma
    architecture: '@OPTION:arch@'
    metadata:
      summary: Plasma library and runtime components based upon KF5 and Qt5
      description: This package provides a Plasma library and runtime components based upon KF5 and Qt5.
      spdx: 'LGPL-2.0-or-later'
      website: 'https://kde.org/plasma-desktop'
      maintainer: "Dennis Bonke <dennis@managarm.org>"
      categories: ['kde-plasma']
    source:
      subdir: 'ports'
      git: 'https://github.com/KDE/libplasma.git'
      tag: 'v5.27.80' # Yes this is 6.0rc2???
      version: '6.0rc2'
    tools_required:
      - system-gcc
      - host-cmake
      - host-qt6
      - host-ecm
      - host-kconfig
      - host-kcmutils
      - host-kpackage
      - wayland-scanner
    pkgs_required:
      - mlibc
      - qtbase6
      - qtdeclarative6
      - qtsvg6
      - qtwayland6
      - wayland
      - plasma-wayland-protocols
      - libglvnd
      - libx11
      - libxcb
      - karchive
      - kcmutils
      - kconfig
      - kconfigwidgets
      - kcoreaddons
      - kglobalaccel
      - kguiaddons
      - ki18n
      - kiconthemes
      - kio
      - kirigami
      - knotifications
      - kpackage
      - ksvg
      - kwidgetsaddons
      - kwindowsystem
      - plasma-activities
    configure:
      - args:
        - 'cmake'
        - '-GNinja'
        - '-DCMAKE_INSTALL_PREFIX=/usr'
        - '-DCMAKE_TOOLCHAIN_FILE=@SOURCE_ROOT@/scripts/CMakeToolchain-@OPTION:arch-triple@.txt'
        - '-DECM_DIR=@BUILD_ROOT@/tools/host-ecm'
        - '-DCMAKE_BUILD_TYPE=Debug'
        ### from ecm.class
        - '-DQT_MAJOR_VERSION=6'
        - '-DBUILD_TESTING=OFF'
        - '-DBUILD_QCH=FALSE'
        - '-DKDE_INSTALL_USE_QT_SYS_PATHS=ON'
        - '-DKDE_INSTALL_QMLDIR=/usr/lib/qt6/qml'
        - '-DKDE_INSTALL_PLUGINDIR=/usr/lib/qt6/plugins'
        - '-DKDE_INSTALL_QTPLUGINDIR=/usr/lib/qt6/plugins'
        ### end ecm.class
        - '-DKF_IGNORE_PLATFORM_CHECK=TRUE' # We're porting, and this is the recommended way to do it.
        - '-DKF6_HOST_TOOLING=@BUILD_ROOT@/tools/host-kconfig/lib/x86_64-linux-gnu/cmake/;@BUILD_ROOT@/tools/host-kcmutils/lib/x86_64-linux-gnu/cmake/;@BUILD_ROOT@/tools/host-kpackage/lib/x86_64-linux-gnu/cmake/'
        - '@THIS_SOURCE_DIR@'
    build:
      - args: ['ninja']
      - args: ['ninja', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: plasma-activities
    architecture: '@OPTION:arch@'
    metadata:
      summary: Core components for KDE's Activities System
      description: This package provides the core components for KDE's Activities System.
      spdx: 'LGPL-2.1-only LGPL-3.0-only'
      website: 'https://develop.kde.org/products/frameworks/'
      maintainer: "Dennis Bonke <dennis@managarm.org>"
      categories: ['kde-plasma']
    source:
      subdir: 'ports'
      git: 'https://github.com/KDE/plasma-activities.git'
      tag: 'v5.27.80' # Yes this is 6.0rc2???
      version: '6.0rc2'
    tools_required:
      - system-gcc
      - host-cmake
      - host-qt6
      - host-ecm
    pkgs_required:
      - mlibc
      - qtbase6
      - qtdeclarative6
      - kconfig
      - kcoreaddons
      - kwindowsystem
      - boost
    configure:
      - args:
        - 'cmake'
        - '-GNinja'
        - '-DCMAKE_INSTALL_PREFIX=/usr'
        - '-DCMAKE_TOOLCHAIN_FILE=@SOURCE_ROOT@/scripts/CMakeToolchain-@OPTION:arch-triple@.txt'
        - '-DECM_DIR=@BUILD_ROOT@/tools/host-ecm'
        - '-DCMAKE_BUILD_TYPE=Debug'
        ### from ecm.class
        - '-DQT_MAJOR_VERSION=6'
        - '-DBUILD_TESTING=OFF'
        - '-DBUILD_QCH=FALSE'
        - '-DKDE_INSTALL_USE_QT_SYS_PATHS=ON'
        - '-DKDE_INSTALL_QMLDIR=/usr/lib/qt6/qml'
        - '-DKDE_INSTALL_PLUGINDIR=/usr/lib/qt6/plugins'
        - '-DKDE_INSTALL_QTPLUGINDIR=/usr/lib/qt6/plugins'
        ### end ecm.class
        - '-DKF_IGNORE_PLATFORM_CHECK=TRUE' # We're porting, and this is the recommended way to do it.
        - '@THIS_SOURCE_DIR@'
    build:
      - args: ['ninja']
      - args: ['ninja', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'
